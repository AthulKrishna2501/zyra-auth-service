name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_KEY }}

    steps:
    # Step 1: Checkout the code from GitHub
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log into Docker Hub
    - name: Log in to Docker Hub
      run: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

    # Step 3: Build and Push Docker Images to Docker Hub
    - name: Build and Push Docker Images
      run: |
        SERVICES="zyra-api-gateway zyra-auth-service zyra-client-service zyra-admin-service zyra-msg-service zyra-vendor-service"
        for SERVICE in $SERVICES; do
          echo "Building $SERVICE"
          docker build -t $DOCKERHUB_USERNAME/$SERVICE:latest .
          docker push $DOCKERHUB_USERNAME/$SERVICE:latest
        done

    # Step 4: Deploy to EC2 via SSH using docker-compose
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          # SSH into EC2 and deploy using docker-compose
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
          # Navigate to the directory where docker-compose.yml is located
          cd /home/ubuntu

          # Pull the latest images for all services using docker-compose
          sudo docker compose pull

          # Stop and remove any existing containers, then start the new containers
          sudo docker compose down  # Stops and removes containers
          sudo docker compose up -d # Starts the containers in detached mode
